# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  workflow_dispatch:
#  push:
#    branches: 
#    - main
#    - develop
#    - developone
#  pull_request:
#    branches:
#    - main
#    - develop
#    - developone

jobs:
  build:

    runs-on: ubuntu-20.04


    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        distribution: 'adopt'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      shell: bash
      working-directory: ./coffang
       
    - name: Build with Gradle
      run: ./gradlew build
      shell: bash
      working-directory: ./coffang
      
    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directiory for deliver
      run: mkdir deploy
      working-directory: ./coffang

    # Jar 파일 복사
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy
      working-directory: ./coffang
      
      # appspec.yml 복사
    - name: Copy appspec
      run: cp appspec.yml ./deploy
      working-directory: ./coffang
      
    # script 복사
    - name: Copy shell
      run: cp ./scripts/* ./deploy
      working-directory: ./coffang
      
    # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r ./coffang.zip ./deploy
      working-directory: ./coffang

      # S3 Bucket으로 전달
    - name: AWS S3 Upload
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private ./coffang.zip s3://mytest-coffick/coffang.zip
      working-directory: ./coffang    
  # Deploy
    - name: Deploy
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      run: |
          aws deploy create-deployment \
          --application-name coffang \
          --deployment-group-name coffang-group \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=mytest-coffick,bundleType=zip,key=coffang.zip \
          --region ap-northeast-2
      working-directory: ./coffang
